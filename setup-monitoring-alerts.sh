#!/bin/bash

# Setup Monitoring & Email Alerts for Throp
# This script helps configure GitHub notifications for monitoring alerts

echo "üìß Setting up Monitoring & Email Alerts"
echo "======================================="

# Check if GitHub CLI is available
if ! command -v gh &> /dev/null; then
    echo "‚ùå GitHub CLI not found. Install with: brew install gh"
    exit 1
fi

echo "‚úÖ GitHub CLI found"

# Check authentication
if ! gh auth status &> /dev/null; then
    echo "üîê Please authenticate with GitHub CLI first:"
    echo "   gh auth login"
    exit 1
fi

echo "‚úÖ GitHub CLI authenticated"

# Get repository info
REPO_INFO=$(gh repo view --json name,owner)
REPO_NAME=$(echo "$REPO_INFO" | jq -r '.name')
OWNER=$(echo "$REPO_INFO" | jq -r '.owner.login')

echo "üìã Repository: $OWNER/$REPO_NAME"

# Enable Issues if not already enabled
echo "üîß Ensuring Issues are enabled..."
gh repo edit --enable-issues

# Set up notification preferences
echo ""
echo "üìß Email Notification Setup"
echo "============================"
echo ""
echo "To receive email alerts for monitoring issues, you need to:"
echo ""
echo "1. **Enable GitHub Email Notifications**:"
echo "   - Go to: https://github.com/settings/notifications"
echo "   - Under 'Email notification preferences':"
echo "     ‚úÖ Enable 'Issues and Pull Requests'"
echo "     ‚úÖ Enable 'Actions'"
echo ""
echo "2. **Configure Repository Notifications**:"
echo "   - Go to: https://github.com/$OWNER/$REPO_NAME"
echo "   - Click 'Watch' (top right)"
echo "   - Select 'All Activity' or 'Custom' with Issues enabled"
echo ""
echo "3. **Set up Label-based Filtering** (Optional):"
echo "   - Create email filters for labels: 'urgent', 'monitoring', 'api-balance'"
echo "   - This helps prioritize critical alerts"
echo ""

# Create labels for monitoring
echo "üè∑Ô∏è  Creating monitoring labels..."

LABELS=(
    "monitoring:blue:System monitoring and health checks"
    "api-balance:orange:API credit and rate limit warnings"  
    "system-health:red:Critical system health issues"
    "urgent:red:Requires immediate attention"
    "auto-generated:gray:Automatically generated by workflows"
    "daily-report:green:Daily system health reports"
    "x-api:purple:X/Twitter API related issues"
)

for label in "${LABELS[@]}"; do
    IFS=':' read -r name color description <<< "$label"
    
    if gh label list --search "$name" --json name | jq -e ".[] | select(.name == \"$name\")" > /dev/null; then
        echo "   ‚úÖ Label '$name' already exists"
    else
        gh label create "$name" --color "$color" --description "$description"
        echo "   ‚ûï Created label '$name'"
    fi
done

# Test monitoring workflow
echo ""
echo "üß™ Testing Monitoring Setup"
echo "==========================="
echo ""
echo "To test the monitoring system:"
echo ""
echo "1. **Manual Test**:"
echo "   gh workflow run \"Comprehensive System Monitoring\""
echo ""
echo "2. **Check Workflow Status**:"
echo "   gh run list --workflow=\"Comprehensive System Monitoring\""
echo ""
echo "3. **View Latest Run**:"
echo "   gh run view --web"
echo ""

# Summary
echo "üìä Monitoring Schedule Summary"
echo "=============================="
echo ""
echo "üïê **Every 4 hours**: Full system health check"
echo "   - API balance monitoring (Anthropic, Perplexity, X API)"
echo "   - Deployment endpoint testing"
echo "   - Rate limit monitoring"
echo "   - Automatic issue creation on failures"
echo ""
echo "üïò **Daily at 9 AM UTC**: Comprehensive report"
echo "   - Full system health summary"
echo "   - Success confirmation (if all healthy)"
echo "   - Balance and usage reports"
echo ""
echo "‚ö° **On-demand**: Manual trigger available"
echo "   - Run anytime via GitHub Actions"
echo "   - Triggered on monitoring config changes"
echo ""

# Alert thresholds
echo "‚ö†Ô∏è  **Alert Thresholds**"
echo "======================"
echo ""
echo "üìä **Anthropic API**:"
echo "   - < 100 requests remaining"
echo "   - < 10,000 tokens remaining"
echo ""
echo "üîç **Perplexity API**:"
echo "   - < 50 requests remaining"
echo ""
echo "üê¶ **X API**:"
echo "   - < 5 mentions API calls remaining"
echo "   - < 10 user lookup calls remaining"
echo "   - < 10 search calls remaining"
echo ""
echo "üåê **System Health**:"
echo "   - Any endpoint returning non-2xx status"
echo "   - Response time > 30 seconds"
echo "   - Netlify function failures"
echo ""

echo "‚úÖ Monitoring setup complete!"
echo ""
echo "üöÄ Next Steps:"
echo "1. Configure your GitHub email notifications (links above)"
echo "2. Run a test: gh workflow run \"Comprehensive System Monitoring\""
echo "3. Check your email for any test alerts"
echo "4. Monitor the first few runs to ensure everything works"
echo ""
echo "üìß You'll now receive email alerts for:"
echo "   - Low API balances/credits"
echo "   - System downtime or endpoint failures"
echo "   - Authentication issues"
echo "   - Rate limit warnings"
echo "   - Daily health summaries (if desired)"
