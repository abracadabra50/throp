name: CI - Build and Test

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize]

env:
  NODE_VERSION: '20'
  # Add placeholder env vars for build
  NEXT_PUBLIC_API_URL: 'http://localhost:3001/api/chat'
  NEXT_PUBLIC_BASE_URL: 'https://throp.ai'
  NEXT_PUBLIC_BACKEND_URL: 'https://throp-bot-947985992378.us-central1.run.app'
  ANTHROPIC_API_KEY: 'placeholder-for-build'

jobs:
  # Run tests and build only - deployment handled by deploy-gcp.yml
  test-and-build:
    name: Test & Build
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install backend dependencies
        run: npm ci
      
      - name: Run backend linter
        run: npm run lint
        continue-on-error: true  # Don't fail on lint warnings
      
      - name: Build backend
        run: npm run build
      
      - name: Install and build frontend
        run: |
          cd web
          npm ci
          npm run build
        env:
          # Provide build-time env vars for Next.js
          NEXT_PUBLIC_API_URL: ${{ env.NEXT_PUBLIC_API_URL }}
          NEXT_PUBLIC_BASE_URL: ${{ env.NEXT_PUBLIC_BASE_URL }}
          NEXT_PUBLIC_BACKEND_URL: ${{ env.NEXT_PUBLIC_BACKEND_URL }}
          ANTHROPIC_API_KEY: ${{ env.ANTHROPIC_API_KEY }}
      
      - name: Upload backend build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: backend-dist
          path: dist/
      
      - name: Upload frontend build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend-dist
          path: web/.next/
        continue-on-error: true

  # Security audit
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Run backend npm audit
        run: npm audit --audit-level=high
        continue-on-error: true  # Don't block on non-critical vulnerabilities
      
      - name: Run frontend npm audit
        run: |
          cd web
          npm audit --audit-level=high
        continue-on-error: true

  # Success notification
  notify-success:
    name: CI Success
    needs: [test-and-build, security]
    runs-on: ubuntu-latest
    if: success()
    
    steps:
      - name: Success message
        run: |
          echo "âœ… CI Pipeline Successful!"
          echo "Code has been tested and built successfully."
          echo ""
          echo "Note: Deployment to production is handled separately via deploy-gcp.yml"
          echo "To deploy: Push to main branch or trigger deploy-gcp workflow manually"