name: Create Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Get all history for changelog
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build project
        run: npm run build
      
      - name: Generate Changelog
        id: changelog
        run: |
          # Get commits since last tag
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -z "$LAST_TAG" ]; then
            COMMITS=$(git log --pretty=format:"- %s (%h)" --no-merges)
          else
            COMMITS=$(git log $LAST_TAG..HEAD --pretty=format:"- %s (%h)" --no-merges)
          fi
          
          # Create changelog
          echo "## What's Changed" > CHANGELOG_CONTENT.md
          echo "" >> CHANGELOG_CONTENT.md
          echo "$COMMITS" >> CHANGELOG_CONTENT.md
          echo "" >> CHANGELOG_CONTENT.md
          echo "**Full Changelog**: https://github.com/${{ github.repository }}/compare/$LAST_TAG...${{ github.ref_name }}" >> CHANGELOG_CONTENT.md
      
      - name: Create Release Archive
        run: |
          # Create release archive without node_modules
          tar -czf throp-${{ github.ref_name }}.tar.gz \
            --exclude=node_modules \
            --exclude=.git \
            --exclude=.env \
            --exclude=dist \
            .
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: CHANGELOG_CONTENT.md
          files: |
            throp-${{ github.ref_name }}.tar.gz
          generate_release_notes: true
          draft: false
          prerelease: ${{ contains(github.ref_name, 'beta') || contains(github.ref_name, 'alpha') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Deploy Release to Production
        if: "!contains(github.ref_name, 'beta') && !contains(github.ref_name, 'alpha')"
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          npm install -g @railway/cli
          railway link ${{ secrets.RAILWAY_PROJECT_ID }}
          railway up --environment=production
